#include <stdio.h>

int main() {
    int n;
    printf("Enter number of processes: ");
    scanf("%d", &n);

    int at[n], bt[n], ct[n], tat[n], wt[n],btt[n];
    float total_tat = 0, total_wt = 0;

    for (int i = 0; i < n; i++) {
        printf("Enter arrival time and burst time for process P%d: ", i + 1);
        scanf("%d %d", &at[i], &bt[i]);
        btt[i]=bt[i];
    }
    int tq;
    printf("Enter Time Quantum: ");
    scanf("%d",&tq);
    int current_time = 0,completed=n;
    int m=-1;
    int q[100],s=0,e=0;
    for(int i=0;i<n;i++){
                if(at[i]<=current_time && bt[i]>0){
                    q[e++]=i;
                }
            }
    while(completed>0){
            for(int i=0;i<n;i++){
                if(at[i]<=current_time && bt[i]>0){
                    int alreadyinq=0;
                    for(int j=s;j<e;j++){
                        if(q[j]==i){
                            alreadyinq=1;
                            break;
                        }
                    }
                    if(!alreadyinq){
                        q[e++]=i;
                    }
                }
            }
        if(s==e){
            current_time++;
            continue;
        }
    int start=q[s++];
    if(bt[start]>tq){
        for(int k=0;k<tq;k++){
            current_time++;
             for(int i=0;i<n;i++){
                if(at[i]<=current_time && bt[i]>0){
                    int alreadyinq=0;
                    for(int j=s-1;j<e;j++){
                        if(q[j]==i){
                            alreadyinq=1;
                            break;
                        }
                    }
                    if(!alreadyinq){
                        q[e++]=i;
                    }
                }
            }
            
        }
        bt[start]-=tq;
        printf("|P%d|",start+1);
    }
    else{
        for(int k=0;k<bt[start];k++){
            current_time++;
             for(int i=0;i<n;i++){
                if(at[i]<=current_time && bt[i]>0){
                    int alreadyinq=0;
                    for(int j=s-1;j<e;j++){
                        if(q[j]==i){
                            alreadyinq=1;
                            break;
                        }
                    }
                    if(!alreadyinq){
                        q[e++]=i;
                    }
                }
            }
            
        }
        bt[start]=-1;
        ct[start]=current_time;
        tat[start]=ct[start]-at[start];
        wt[start]=tat[start]-btt[start];
        total_tat+=tat[start];
        total_wt+=wt[start];
           printf("|P%d|",start+1);
        completed--;
        
    }
}
    printf("\nProcess\tAT\tBT\tCT\tTAT\tWT\n");
    for (int i = 0; i < n; i++) {
        printf("P%d   \t %d\t%d\t%d\t%d\t%d\n", i + 1, at[i], btt[i], ct[i], tat[i], wt[i]);
    }

    printf("\nAverage Turnaround Time: %.2f", total_tat / n);
    printf("\nAverage Waiting Time: %.2f\n", total_wt / n);

    return 0;
}
